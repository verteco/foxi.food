{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejhanisch/CascadeProjects/foxi.food/frontend/src/contexts/OrderContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { orderService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  orders: [],\n  currentOrder: null,\n  myOrders: [],\n  cart: [],\n  isLoading: false,\n  error: null,\n  orderStatistics: null,\n  cartTotal: 0\n};\nconst orderReducer = (state, action) => {\n  var _state$currentOrder;\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    case 'SET_ORDERS':\n      return {\n        ...state,\n        orders: action.payload,\n        isLoading: false\n      };\n    case 'SET_CURRENT_ORDER':\n      return {\n        ...state,\n        currentOrder: action.payload,\n        isLoading: false\n      };\n    case 'SET_MY_ORDERS':\n      return {\n        ...state,\n        myOrders: action.payload,\n        isLoading: false\n      };\n    case 'ADD_ORDER':\n      return {\n        ...state,\n        orders: [action.payload, ...state.orders],\n        myOrders: [action.payload, ...state.myOrders],\n        currentOrder: action.payload\n      };\n    case 'UPDATE_ORDER':\n      return {\n        ...state,\n        orders: state.orders.map(order => order.id === action.payload.id ? action.payload : order),\n        myOrders: state.myOrders.map(order => order.id === action.payload.id ? action.payload : order),\n        currentOrder: ((_state$currentOrder = state.currentOrder) === null || _state$currentOrder === void 0 ? void 0 : _state$currentOrder.id) === action.payload.id ? action.payload : state.currentOrder\n      };\n    case 'SET_ORDER_STATISTICS':\n      return {\n        ...state,\n        orderStatistics: action.payload\n      };\n    case 'ADD_TO_CART':\n      const existingItemIndex = state.cart.findIndex(item => item.menu_item === action.payload.menu_item);\n      let newCart;\n      if (existingItemIndex >= 0) {\n        newCart = state.cart.map((item, index) => index === existingItemIndex ? {\n          ...item,\n          quantity: item.quantity + action.payload.quantity\n        } : item);\n      } else {\n        newCart = [...state.cart, action.payload];\n      }\n      return {\n        ...state,\n        cart: newCart\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.menu_item !== action.payload)\n      };\n    case 'UPDATE_CART_ITEM':\n      return {\n        ...state,\n        cart: state.cart.map(item => item.menu_item === action.payload.menuItemId ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item).filter(item => item.quantity > 0)\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        cart: [],\n        cartTotal: 0\n      };\n    case 'CALCULATE_CART_TOTAL':\n      const total = state.cart.reduce((sum, item) => {\n        const price = parseFloat(item.menu_item_details.price);\n        return sum + price * item.quantity;\n      }, 0);\n      return {\n        ...state,\n        cartTotal: total\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst OrderContext = /*#__PURE__*/createContext(undefined);\nexport const OrderProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(orderReducer, initialState);\n\n  // Recalculate cart total whenever cart changes\n  React.useEffect(() => {\n    dispatch({\n      type: 'CALCULATE_CART_TOTAL'\n    });\n  }, [state.cart]);\n  const fetchOrders = async params => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await orderService.getOrders(params);\n      dispatch({\n        type: 'SET_ORDERS',\n        payload: response.results\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při načítání objednávek'\n      });\n    }\n  };\n  const fetchOrderById = async id => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const order = await orderService.getOrderById(id);\n      dispatch({\n        type: 'SET_CURRENT_ORDER',\n        payload: order\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při načítání objednávky'\n      });\n    }\n  };\n  const fetchMyOrders = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await orderService.getMyOrders();\n      dispatch({\n        type: 'SET_MY_ORDERS',\n        payload: response.results\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při načítání vašich objednávek'\n      });\n    }\n  };\n  const createOrder = async data => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const order = await orderService.createOrder(data);\n      dispatch({\n        type: 'ADD_ORDER',\n        payload: order\n      });\n      dispatch({\n        type: 'CLEAR_CART'\n      });\n      return order;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při vytváření objednávky'\n      });\n      throw error;\n    }\n  };\n  const updateOrderStatus = async (orderId, data) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const order = await orderService.updateOrderStatus(orderId, data);\n      dispatch({\n        type: 'UPDATE_ORDER',\n        payload: order\n      });\n      return order;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při aktualizaci objednávky'\n      });\n      throw error;\n    }\n  };\n  const cancelOrder = async (orderId, reason) => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const order = await orderService.cancelOrder(orderId, reason);\n      dispatch({\n        type: 'UPDATE_ORDER',\n        payload: order\n      });\n      return order;\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při rušení objednávky'\n      });\n      throw error;\n    }\n  };\n  const fetchOrderStatistics = async (restaurantId, period = '30d') => {\n    try {\n      const stats = await orderService.getOrderStatistics(restaurantId, period);\n      dispatch({\n        type: 'SET_ORDER_STATISTICS',\n        payload: stats\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message || 'Chyba při načítání statistik'\n      });\n    }\n  };\n  const addToCart = item => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: item\n    });\n  };\n  const removeFromCart = menuItemId => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: menuItemId\n    });\n  };\n  const updateCartItemQuantity = (menuItemId, quantity) => {\n    dispatch({\n      type: 'UPDATE_CART_ITEM',\n      payload: {\n        menuItemId,\n        quantity\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const getCartItemCount = () => {\n    return state.cart.reduce((total, item) => total + item.quantity, 0);\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const getOrderStatusDisplayName = status => {\n    return orderService.getOrderStatusDisplayName(status);\n  };\n  const value = {\n    ...state,\n    fetchOrders,\n    fetchOrderById,\n    fetchMyOrders,\n    createOrder,\n    updateOrderStatus,\n    cancelOrder,\n    fetchOrderStatistics,\n    addToCart,\n    removeFromCart,\n    updateCartItemQuantity,\n    clearCart,\n    getCartItemCount,\n    clearError,\n    getOrderStatusDisplayName\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = OrderProvider;\nexport const useOrder = () => {\n  _s2();\n  const context = useContext(OrderContext);\n  if (context === undefined) {\n    throw new Error('useOrder must be used within an OrderProvider');\n  }\n  return context;\n};\n_s2(useOrder, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default OrderContext;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","orderService","jsxDEV","_jsxDEV","initialState","orders","currentOrder","myOrders","cart","isLoading","error","orderStatistics","cartTotal","orderReducer","state","action","_state$currentOrder","type","payload","map","order","id","existingItemIndex","findIndex","item","menu_item","newCart","index","quantity","filter","menuItemId","total","reduce","sum","price","parseFloat","menu_item_details","OrderContext","undefined","OrderProvider","children","_s","dispatch","useEffect","fetchOrders","params","response","getOrders","results","message","fetchOrderById","getOrderById","fetchMyOrders","getMyOrders","createOrder","data","updateOrderStatus","orderId","cancelOrder","reason","fetchOrderStatistics","restaurantId","period","stats","getOrderStatistics","addToCart","removeFromCart","updateCartItemQuantity","clearCart","getCartItemCount","clearError","getOrderStatusDisplayName","status","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useOrder","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ondrejhanisch/CascadeProjects/foxi.food/frontend/src/contexts/OrderContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { Order, OrderItem, OrderStatus, orderService } from '../services';\n\ninterface CartItem extends Omit<OrderItem, 'id' | 'price'> {\n  menu_item_details: {\n    id: number;\n    name: string;\n    price: string;\n    image?: string;\n  };\n}\n\ninterface OrderState {\n  orders: Order[];\n  currentOrder: Order | null;\n  myOrders: Order[];\n  cart: CartItem[];\n  isLoading: boolean;\n  error: string | null;\n  orderStatistics: any;\n  cartTotal: number;\n}\n\ntype OrderAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_ORDERS'; payload: Order[] }\n  | { type: 'SET_CURRENT_ORDER'; payload: Order | null }\n  | { type: 'SET_MY_ORDERS'; payload: Order[] }\n  | { type: 'ADD_ORDER'; payload: Order }\n  | { type: 'UPDATE_ORDER'; payload: Order }\n  | { type: 'SET_ORDER_STATISTICS'; payload: any }\n  | { type: 'ADD_TO_CART'; payload: CartItem }\n  | { type: 'REMOVE_FROM_CART'; payload: number }\n  | { type: 'UPDATE_CART_ITEM'; payload: { menuItemId: number; quantity: number } }\n  | { type: 'CLEAR_CART' }\n  | { type: 'CALCULATE_CART_TOTAL' }\n  | { type: 'CLEAR_ERROR' };\n\ninterface OrderContextType extends OrderState {\n  // Order operations\n  fetchOrders: (params?: any) => Promise<void>;\n  fetchOrderById: (id: number) => Promise<void>;\n  fetchMyOrders: () => Promise<void>;\n  createOrder: (data: any) => Promise<Order>;\n  updateOrderStatus: (orderId: number, data: any) => Promise<Order>;\n  cancelOrder: (orderId: number, reason?: string) => Promise<Order>;\n  fetchOrderStatistics: (restaurantId: number, period?: string) => Promise<void>;\n  \n  // Cart operations\n  addToCart: (item: CartItem) => void;\n  removeFromCart: (menuItemId: number) => void;\n  updateCartItemQuantity: (menuItemId: number, quantity: number) => void;\n  clearCart: () => void;\n  getCartItemCount: () => number;\n  \n  // Utility operations\n  clearError: () => void;\n  getOrderStatusDisplayName: (status: OrderStatus) => string;\n}\n\nconst initialState: OrderState = {\n  orders: [],\n  currentOrder: null,\n  myOrders: [],\n  cart: [],\n  isLoading: false,\n  error: null,\n  orderStatistics: null,\n  cartTotal: 0,\n};\n\nconst orderReducer = (state: OrderState, action: OrderAction): OrderState => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload, isLoading: false };\n    case 'SET_ORDERS':\n      return { ...state, orders: action.payload, isLoading: false };\n    case 'SET_CURRENT_ORDER':\n      return { ...state, currentOrder: action.payload, isLoading: false };\n    case 'SET_MY_ORDERS':\n      return { ...state, myOrders: action.payload, isLoading: false };\n    case 'ADD_ORDER':\n      return {\n        ...state,\n        orders: [action.payload, ...state.orders],\n        myOrders: [action.payload, ...state.myOrders],\n        currentOrder: action.payload,\n      };\n    case 'UPDATE_ORDER':\n      return {\n        ...state,\n        orders: state.orders.map(order => \n          order.id === action.payload.id ? action.payload : order\n        ),\n        myOrders: state.myOrders.map(order => \n          order.id === action.payload.id ? action.payload : order\n        ),\n        currentOrder: state.currentOrder?.id === action.payload.id \n          ? action.payload \n          : state.currentOrder,\n      };\n    case 'SET_ORDER_STATISTICS':\n      return { ...state, orderStatistics: action.payload };\n    case 'ADD_TO_CART':\n      const existingItemIndex = state.cart.findIndex(\n        item => item.menu_item === action.payload.menu_item\n      );\n      \n      let newCart;\n      if (existingItemIndex >= 0) {\n        newCart = state.cart.map((item, index) =>\n          index === existingItemIndex\n            ? { ...item, quantity: item.quantity + action.payload.quantity }\n            : item\n        );\n      } else {\n        newCart = [...state.cart, action.payload];\n      }\n      \n      return { ...state, cart: newCart };\n    \n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.menu_item !== action.payload),\n      };\n    \n    case 'UPDATE_CART_ITEM':\n      return {\n        ...state,\n        cart: state.cart.map(item =>\n          item.menu_item === action.payload.menuItemId\n            ? { ...item, quantity: action.payload.quantity }\n            : item\n        ).filter(item => item.quantity > 0),\n      };\n    \n    case 'CLEAR_CART':\n      return { ...state, cart: [], cartTotal: 0 };\n    \n    case 'CALCULATE_CART_TOTAL':\n      const total = state.cart.reduce((sum, item) => {\n        const price = parseFloat(item.menu_item_details.price);\n        return sum + (price * item.quantity);\n      }, 0);\n      return { ...state, cartTotal: total };\n    \n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nconst OrderContext = createContext<OrderContextType | undefined>(undefined);\n\ninterface OrderProviderProps {\n  children: ReactNode;\n}\n\nexport const OrderProvider: React.FC<OrderProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(orderReducer, initialState);\n\n  // Recalculate cart total whenever cart changes\n  React.useEffect(() => {\n    dispatch({ type: 'CALCULATE_CART_TOTAL' });\n  }, [state.cart]);\n\n  const fetchOrders = async (params?: any) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const response = await orderService.getOrders(params);\n      dispatch({ type: 'SET_ORDERS', payload: response.results });\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při načítání objednávek' });\n    }\n  };\n\n  const fetchOrderById = async (id: number) => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const order = await orderService.getOrderById(id);\n      dispatch({ type: 'SET_CURRENT_ORDER', payload: order });\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při načítání objednávky' });\n    }\n  };\n\n  const fetchMyOrders = async () => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const response = await orderService.getMyOrders();\n      dispatch({ type: 'SET_MY_ORDERS', payload: response.results });\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při načítání vašich objednávek' });\n    }\n  };\n\n  const createOrder = async (data: any): Promise<Order> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const order = await orderService.createOrder(data);\n      dispatch({ type: 'ADD_ORDER', payload: order });\n      dispatch({ type: 'CLEAR_CART' });\n      return order;\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při vytváření objednávky' });\n      throw error;\n    }\n  };\n\n  const updateOrderStatus = async (orderId: number, data: any): Promise<Order> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const order = await orderService.updateOrderStatus(orderId, data);\n      dispatch({ type: 'UPDATE_ORDER', payload: order });\n      return order;\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při aktualizaci objednávky' });\n      throw error;\n    }\n  };\n\n  const cancelOrder = async (orderId: number, reason?: string): Promise<Order> => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    try {\n      const order = await orderService.cancelOrder(orderId, reason);\n      dispatch({ type: 'UPDATE_ORDER', payload: order });\n      return order;\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při rušení objednávky' });\n      throw error;\n    }\n  };\n\n  const fetchOrderStatistics = async (restaurantId: number, period = '30d') => {\n    try {\n      const stats = await orderService.getOrderStatistics(restaurantId, period);\n      dispatch({ type: 'SET_ORDER_STATISTICS', payload: stats });\n    } catch (error: any) {\n      dispatch({ type: 'SET_ERROR', payload: error.message || 'Chyba při načítání statistik' });\n    }\n  };\n\n  const addToCart = (item: CartItem) => {\n    dispatch({ type: 'ADD_TO_CART', payload: item });\n  };\n\n  const removeFromCart = (menuItemId: number) => {\n    dispatch({ type: 'REMOVE_FROM_CART', payload: menuItemId });\n  };\n\n  const updateCartItemQuantity = (menuItemId: number, quantity: number) => {\n    dispatch({ type: 'UPDATE_CART_ITEM', payload: { menuItemId, quantity } });\n  };\n\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' });\n  };\n\n  const getCartItemCount = (): number => {\n    return state.cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const getOrderStatusDisplayName = (status: OrderStatus): string => {\n    return orderService.getOrderStatusDisplayName(status);\n  };\n\n  const value: OrderContextType = {\n    ...state,\n    fetchOrders,\n    fetchOrderById,\n    fetchMyOrders,\n    createOrder,\n    updateOrderStatus,\n    cancelOrder,\n    fetchOrderStatistics,\n    addToCart,\n    removeFromCart,\n    updateCartItemQuantity,\n    clearCart,\n    getCartItemCount,\n    clearError,\n    getOrderStatusDisplayName,\n  };\n\n  return (\n    <OrderContext.Provider value={value}>\n      {children}\n    </OrderContext.Provider>\n  );\n};\n\nexport const useOrder = (): OrderContextType => {\n  const context = useContext(OrderContext);\n  if (context === undefined) {\n    throw new Error('useOrder must be used within an OrderProvider');\n  }\n  return context;\n};\n\nexport default OrderContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}