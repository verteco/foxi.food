{"ast":null,"code":"var _jsxFileName = \"/Users/ondrejhanisch/CascadeProjects/foxi.food/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n    case 'LOAD_USER_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n    case 'LOAD_USER_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case 'LOAD_USER_FAILURE':\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (authService.isAuthenticated()) {\n        dispatch({\n          type: 'LOAD_USER_START'\n        });\n        try {\n          const user = await authService.getCurrentUser();\n          if (user) {\n            dispatch({\n              type: 'LOAD_USER_SUCCESS',\n              payload: user\n            });\n          } else {\n            dispatch({\n              type: 'LOAD_USER_FAILURE'\n            });\n          }\n        } catch (error) {\n          dispatch({\n            type: 'LOAD_USER_FAILURE'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'LOAD_USER_FAILURE'\n        });\n      }\n    };\n    loadUser();\n  }, []);\n  const login = async (username, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.login({\n        username,\n        password\n      });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data, _error$response2$data2;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.non_field_errors) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2[0]) || 'Přihlášení se nezdařilo. Zkontrolujte své údaje.';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const register = async data => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.register(data);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data, _error$response4$data2, _error$response5, _error$response5$data, _error$response5$data2;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : (_error$response4$data2 = _error$response4$data.username) === null || _error$response4$data2 === void 0 ? void 0 : _error$response4$data2[0]) || ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : (_error$response5$data2 = _error$response5$data.email) === null || _error$response5$data2 === void 0 ? void 0 : _error$response5$data2[0]) || 'Registrace se nezdařila. Zkuste to znovu.';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    register,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthContext","undefined","AuthProvider","children","_s","dispatch","loadUser","getCurrentUser","login","username","password","response","_error$response","_error$response$data","_error$response2","_error$response2$data","_error$response2$data2","errorMessage","data","detail","non_field_errors","register","_error$response3","_error$response3$data","_error$response4","_error$response4$data","_error$response4$data2","_error$response5","_error$response5$data","_error$response5$data2","email","logout","console","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ondrejhanisch/CascadeProjects/foxi.food/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { authService, User } from '../services';\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGIN_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'LOAD_USER_START' }\n  | { type: 'LOAD_USER_SUCCESS'; payload: User }\n  | { type: 'LOAD_USER_FAILURE' }\n  | { type: 'CLEAR_ERROR' };\n\ninterface AuthContextType extends AuthState {\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  register: (data: {\n    username: string;\n    email: string;\n    password: string;\n    first_name?: string;\n    last_name?: string;\n  }) => Promise<void>;\n  clearError: () => void;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case 'LOGIN_START':\n    case 'LOAD_USER_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n    case 'LOAD_USER_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'LOAD_USER_FAILURE':\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (authService.isAuthenticated()) {\n        dispatch({ type: 'LOAD_USER_START' });\n        try {\n          const user = await authService.getCurrentUser();\n          if (user) {\n            dispatch({ type: 'LOAD_USER_SUCCESS', payload: user });\n          } else {\n            dispatch({ type: 'LOAD_USER_FAILURE' });\n          }\n        } catch (error) {\n          dispatch({ type: 'LOAD_USER_FAILURE' });\n        }\n      } else {\n        dispatch({ type: 'LOAD_USER_FAILURE' });\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    dispatch({ type: 'LOGIN_START' });\n    try {\n      const response = await authService.login({ username, password });\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.detail || \n                          error.response?.data?.non_field_errors?.[0] ||\n                          'Přihlášení se nezdařilo. Zkontrolujte své údaje.';\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const register = async (data: {\n    username: string;\n    email: string;\n    password: string;\n    first_name?: string;\n    last_name?: string;\n  }) => {\n    dispatch({ type: 'LOGIN_START' });\n    try {\n      const response = await authService.register(data);\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.detail || \n                          error.response?.data?.username?.[0] ||\n                          error.response?.data?.email?.[0] ||\n                          'Registrace se nezdařila. Zkuste to znovu.';\n      dispatch({ type: 'LOGIN_FAILURE', payload: errorMessage });\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: 'LOGOUT' });\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    logout,\n    register,\n    clearError,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}